name: hostmetricsreceiver/process

sem_conv_version: 1.9.0

resource_attributes:
  process.pid:
    description: Process identifier (PID).
    type: int
  process.parent_pid:
    description: Parent Process identifier (PPID).
    type: int
  process.executable.name:
    description: >-
      The name of the process executable. On Linux based systems, can be set to the
      Name in proc/[pid]/status. On Windows, can be set to the base name of
      GetProcessImageFileNameW.
    type: string
  process.executable.path:
    description: >-
      The full path to the process executable. On Linux based systems, can be set to
      the target of proc/[pid]/exe. On Windows, can be set to the result of
      GetProcessImageFileNameW.
    type: string
  process.command:
    description: >-
      The command used to launch the process (i.e. the command name). On Linux based
      systems, can be set to the zeroth string in proc/[pid]/cmdline. On Windows, can
      be set to the first parameter extracted from GetCommandLineW.
    type: string
  process.command_line:
    description: >-
      The full command used to launch the process as a single string representing the
      full command. On Windows, can be set to the result of GetCommandLineW. Do not
      set this if you have to assemble it just for monitoring; use
      process.command_args instead.
    type: string
  process.owner:
    description: The username of the user that owns the process.
    type: string

attributes:
  direction:
    description: Direction of flow of bytes (read or write).
    type: string
    enum: [read, write]

  state:
    description: Breakdown of CPU usage by type.
    type: string
    enum: [system, user, wait]

  paging_fault_type:
    name_override: type
    description: Type of memory paging fault.
    type: string
    enum: [major, minor]

  context_switch_type:
    name_override: type
    description: Type of context switched.
    type: string
    enum: [involuntary, voluntary]

metrics:
  process.cpu.time:
    enabled: true
    description: Total CPU seconds broken down by different states.
    unit: s
    sum:
      value_type: double
      aggregation: cumulative
      monotonic: true
    attributes: [state]

  process.cpu.utilization:
    enabled: false
    description: >-
      Percentage of total CPU time used by the process since last scrape,
      expressed as a value between 0 and 1.
      On the first scrape, no data point is emitted for this metric.
    unit: 1
    gauge:
      value_type: double
    attributes: [state]

  process.memory.physical_usage:
    enabled: true
    description: "Deprecated: use `process.memory.usage` metric instead. The amount of physical memory in use."
    warnings:
      if_enabled: >-
        The metric is deprecated and will be removed in v0.70.0. Please use `process.memory.usage` instead. See
        https://github.com/ydessouky/enms-OTel-collector/tree/main/receiver/hostmetricsreceiver#transition-to-process-memory-metric-names-aligned-with-opentelemetry-specification
        for more details.
    unit: By
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: false

  process.memory.usage:
    enabled: false
    description: The amount of physical memory in use.
    unit: By
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: false

  process.memory.virtual_usage:
    enabled: true
    description: "Deprecated: Use `process.memory.virtual` metric instead. Virtual memory size."
    warnings:
      if_enabled: >-
        The metric is deprecated and will be removed in v0.70.0. Please use `process.memory.virtual` metric instead. See 
        https://github.com/ydessouky/enms-OTel-collector/tree/main/receiver/hostmetricsreceiver#transition-to-process-memory-metric-names-aligned-with-opentelemetry-specification
        for more details.
    unit: By
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: false

  process.memory.virtual:
    enabled: false
    description: Virtual memory size.
    unit: By
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: false

  process.memory.utilization:
    enabled: false
    description: Percentage of total physical memory that is used by the process.
    unit: 1
    gauge:
      value_type: double

  process.disk.io:
    enabled: true
    description: Disk bytes transferred.
    unit: By
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: true
    attributes: [direction]

  process.paging.faults:
    enabled: false
    description: Number of page faults the process has made. This metric is only available on Linux.
    unit: "{faults}"
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: true
    attributes: [paging_fault_type]

  process.signals_pending:
    enabled: false
    description: Number of pending signals for the process. This metric is only available on Linux.
    unit: "{signals}"
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: false

  process.threads:
    enabled: false
    description: Process threads count.
    unit: "{threads}"
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: false

  process.open_file_descriptors:
    enabled: false
    description: Number of file descriptors in use by the process.
    unit: '{count}'
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: false
  
  process.context_switches:
    enabled: false
    description: Number of times the process has been context switched.
    unit: '{count}'
    sum:
      value_type: int
      aggregation: cumulative
      monotonic: true
    attributes: [context_switch_type]
